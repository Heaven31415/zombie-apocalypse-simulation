{% extends 'base.html.twig' %}

{% block title %}Simulation{% endblock %}

{% block body %}
    {% for message in app.flashes('notice') %}
        <div>{{ message }}</div>
    {% endfor %}

    <div>
        <h1>Menu</h1>
        <div>
            <a href="{{ path('app_new_human') }}">Add human</a>
            <a href="{{ path('app_index_human') }}">(See all)</a>
        </div>
        <div>
            <a href="{{ path('app_new_zombie') }}">Spawn zombie</a>
            <a href="{{ path('app_index_zombie') }}">(See all)</a>
        </div>
        <div>
            <a href="{{ path('app_new_resource') }}">Allocate resource</a>
            <a href="{{ path('app_index_resource') }}">(See all)</a>
        </div>
    </div>

    <div>
        <h1>Simulation</h1>
        <table style="padding: 5px; border: 1px solid black">
            <tr>
                <th></th>
                {% for x in range(1, 20) %}
                    {% if x < 10 %}
                        <th>0{{ x }}</th>
                    {% else %}
                        <th>{{ x }}</th>
                    {% endif %}
                {% endfor %}
            </tr>
            {% for y in range(1, 20) %}
                <tr>
                    {% if y < 10 %}
                        <th>0{{ y }}</th>
                    {% else %}
                        <th>{{ y }}</th>
                    {% endif %}
                    {% for x in range(1, 20) %}
                        <th id="x{{ x }} y{{ y }}">.</th>
                    {% endfor %}
                </tr>
            {% endfor %}
        </table>
        <h2>Legend</h2>
        <ul>
            <li>A = Ammo (Resource)</li>
            <li>F = Food (Resource)</li>
            <li>H = Human</li>
            <li>Z = Zombie</li>
            <li>M = Mixed (More than 1 entity at the same position)</li>
        </ul>
    </div>
{% endblock %}

{% block script %}
async function updateSimulationState() {
    const response = await fetch('http://localhost:8000/simulation/state');
    const state = await response.json();

    for (let y = 1; y <= 20; y++) {
        for (let x = 1; x <= 20; x++) {
            const element = document.getElementById(`x${x} y${y}`);
            element.innerText = state[y - 1][x - 1];
        }
    }
}

updateSimulationState();

setInterval(updateSimulationState, 1000);
{% endblock %}
